// Importing required packages and modules
const { Schema, model, Types } = require("mongoose");
const dateFormat = require("../utils/dateFormat");

// Reaction Schema
const ReactionSchema = new Schema(
{
// Reaction ID auto generated by MongoDB
reactionId: {
type: Schema.Types.ObjectId,
default: () => new Types.ObjectId(),
},
// Body of the reaction
reactionBody: {
type: String,
required: true,
maxlength: 280,
},
// Username of the reaction creator
username: {
type: String,
required: true,
},
// Creation date of the reaction
createdAt: {
type: Date,
default: Date.now,
get: (timestamp) => dateFormat(timestamp),
},
},
{
// Apply getters for JSON data
toJSON: {
getters: true,
},
// Disable virtual ID
id: false,
}
);

// Thought Schema
const ThoughtSchema = new Schema(
{
// The text of the thought
thoughtText: {
type: String,
required: "Thought is Required, wrong app if you don't have any thoughts!",
minlength: 1,
maxlength: 200,
},
// Creation date of the thought
createdAt: {
type: Date,
default: Date.now,
get: (timestamp) => dateFormat(timestamp),
},
// Username of the thought creator
username: {
type: String,
required: true,
},
// Reactions on the thought
reactions: [ReactionSchema],
},
{
// Apply getters for virtuals and JSON data
toJSON: {
virtuals: true,
getters: true,
},
// Disable virtual ID
id: false,
}
);

// Virtual reaction count
ThoughtSchema.virtual("reactionCount").get(function () {
return this.reactions.length;
});

// Initializing the Thought model
const Thought = model("Thought", ThoughtSchema);

module.exports = Thought; // Export the Thought model for external usage.